class e{constructor(){this._events={}}emit(e){if("string"==typeof e&&e&&this._events[e]){const s=t(arguments,1),n=this._events[e],i=n.length;for(let e=0;e<i;e++)n[e].apply(this,s)}return this}addListener(e,t){return"string"==typeof e&&e&&"function"==typeof t&&(this._events[e]||(this._events[e]=[]),this._events[e].push(t)),this}removeListener(e,t){if("string"==typeof e&&e&&"function"==typeof t&&this._events[e]){const s=this._events[e],n=s.lastIndexOf(t);n>-1&&s.splice(n,1)}return this}removeAllListeners(){return this._events={},this}once(e,t){if("string"==typeof e&&e&&"function"==typeof t){const s={eventName:e,listener:t,wrappedListener:void 0},n=this._once.bind(this,s);s.wrappedListener=n,this.addListener(e,n)}return this}_once(e){e.wrappedListener&&(this.removeListener(e.eventName,e.wrappedListener),e.listener.apply(this,t(arguments,1)))}}function t(e,t){const s=[],n=e.length;for(let i=t;i<n;i++)s.push(e[i]);return s}e.prototype.on=e.prototype.addListener,e.prototype.off=e.prototype.removeListener;export default e;